//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElefantesBlancosDatos.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class stra_usuarios
    {

        [Key]
        [Display(Name = "Código")]
        public int id_stra_usuario { get; set; }
        [Required(ErrorMessage = "El campo Usuario es obligatorio ")]
        [Display(Name = "Usuario")]
        [StringLength(100, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string usuario { get; set; }
        [Display(Name = "* Primer nombre")]
        [Required(ErrorMessage = "El campo primer nombre es obligatorio ")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string nombres { get; set; }
        [Required(ErrorMessage = "El campo primer apellido es obligatorio")]
        [Display(Name = "* Primer apellido")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string apellidos { get; set; }
        [Display(Name = "* Correo Electrónico")]
        [Required(ErrorMessage = "El campo correo electrónico es obligatorio")]
        [DataType(DataType.EmailAddress, ErrorMessage = "Correo Electrónico  no es valido")]
        [StringLength(100, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string correo_electronico { get; set; }
        [Required(ErrorMessage = "El campo Entidad no puede ser vacío ")]
        [Display(Name = "Entidad")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string entidad { get; set; }
        [Display(Name = "Movil")]
        [StringLength(13, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        [DataType(DataType.PhoneNumber, ErrorMessage = "Número de teléfono movil  invalido")]
        [RegularExpression(@"^(\d{10})$", ErrorMessage = "No es un numero de teléfono válido.")]
        public string celular { get; set; }
        [Display(Name = "Teléfono")]
        [DataType(DataType.PhoneNumber, ErrorMessage = "Numero de teléfono fijo  invalido")]
        [RegularExpression(@"^(\d{10})$", ErrorMessage = "No es un numero de telefono válido.")]
        [StringLength(13, ErrorMessage = "Maximo numero de caracteres sobrepasado")]
        public string telefono { get; set; }
        [Display(Name = "Grupo")]
        public Nullable<int> id_stra_grupo { get; set; }
        [Required(ErrorMessage = "El campo contraseña es obligatorio")]
        [StringLength(40, ErrorMessage = "La longitud de la contraseña debe ser mínimo de 6 caracteres y máximo de 40", MinimumLength = 6)]
        [DataType(DataType.Password)]
        public string contrasena { get; set; }
        [Display(Name = "Segundo Nombre")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string segundo_nombre { get; set; }
        [Display(Name = "Segundo Apellido")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        public string segundo_apellido { get; set; }
        [Display(Name = "Primera Vez")]
        public sbyte primera_vez { get; set; }
        [Display(Name = "Estado")]
        [Required(ErrorMessage = "Seleccione una opción")]
        public sbyte estado { get; set; }
        public string nombre_estado { get; set; }
        [Display(Name = "* Cargo")]
        [StringLength(40, ErrorMessage = "Máximo número de caracteres sobrepasado")]
        [Required(ErrorMessage = "El campo cargo es obligatorio ")]
        public string cargo { get; set; }
        //Propiedades que se utilizan para cambiar contraseña
       [StringLength(40, ErrorMessage = "La longitud de la  {0} debe ser al mínimo {2} caracteres de longitud y máximo de 40.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Contraseña Anterior")]
         [Required(ErrorMessage = "El campo contraseña anterior es obligatorio")]
        public string ViejaClave { get; set; }
         [StringLength(40, ErrorMessage = "La longitud de la  {0} debe ser al mínimo {2} caracteres de longitud y máximo de 40.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Nueva Contraseña")]
        [Required(ErrorMessage = "El campo nueva contraseña es obligatorio ")]
        public string NuevaClave { get; set; }
        [DataType(DataType.Password)]
        [Display(Name = "Confirmar Nueva Contraseña")]
        [Required(ErrorMessage = "El campo confirmar nueva contraseña es obligatorio ")]
        [Compare("NuevaClave", ErrorMessage = "La nueva contraseña y la confirmación de contraseña no coinciden.")]
        public string ConfirmarClave { get; set; }
        public virtual stra_grupos stra_grupos { get; set; }
    }
}
