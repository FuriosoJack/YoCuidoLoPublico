//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package co.gov.presidencia.yocuidolopublico;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import co.gov.mintic.util.ProgressDialogManager_;
import co.gov.presidencia.yocuidolopublico.service.client.CuidoLoPublicoClient_;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ActualizarReporteDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.AsociarImagenDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.DetalleCuidoLoPublicoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ElementoListaDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ImagenDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.VotoRegistradoDTO;
import co.gov.presidencia.yocuidolopublico.R.layout;
import com.googlecode.androidannotations.api.BackgroundExecutor;

public final class DetalleActivity_
    extends DetalleActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_detalle);
    }

    private void init_(Bundle savedInstanceState) {
        reportesClient = new CuidoLoPublicoClient_();
        dialog = ProgressDialogManager_.getInstance_(this);
    }

    private void afterSetContentView_() {
        entidadEdit = ((EditText) findViewById(co.gov.presidencia.yocuidolopublico.R.id.entidad));
        tituloEdit = ((EditText) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_title));
        spinnerTiempo = ((Spinner) findViewById(co.gov.presidencia.yocuidolopublico.R.id.spinnerTiempo));
        deptoMunicipio = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_deptoMunicipio));
        tiempo = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_tiempo_txt));
        titulo = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_title_txt));
        contratistaEdit = ((EditText) findViewById(co.gov.presidencia.yocuidolopublico.R.id.contratista));
        cantidad_fotos = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_cantidad_fotos));
        btnRechazar = ((Button) findViewById(co.gov.presidencia.yocuidolopublico.R.id.btnRechazar));
        entidad = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_entidad_txt));
        detalle_estado_texto = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_estado_texto));
        costo = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_costo_txt));
        btnAgregarFoto = ((Button) findViewById(co.gov.presidencia.yocuidolopublico.R.id.btnAgregarFoto));
        gallery = ((LinearLayout) findViewById(co.gov.presidencia.yocuidolopublico.R.id.myGallery));
        txtTitulo = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.txtTituloReporte));
        razon = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_razon_txt));
        fechaReporte = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_fecha_reporte));
        contratista = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_contratista_txt));
        costoEdit = ((EditText) findViewById(co.gov.presidencia.yocuidolopublico.R.id.costo));
        panelNotificacion = ((LinearLayout) findViewById(co.gov.presidencia.yocuidolopublico.R.id.panelNotificacion));
        cantidad_rechazos = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_cantidad_rechazos));
        spinnerRazon = ((Spinner) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_razon_spinner));
        notificacion = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_notificacion_txt));
        panelBotonActualizar = ((LinearLayout) findViewById(co.gov.presidencia.yocuidolopublico.R.id.panelBotonActualizar));
        {
            View view = findViewById(co.gov.presidencia.yocuidolopublico.R.id.btnAgregarFoto);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        DetalleActivity_.this.btnAgregarFoto();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(co.gov.presidencia.yocuidolopublico.R.id.btnActualizar);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        DetalleActivity_.this.btnActualizar();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(co.gov.presidencia.yocuidolopublico.R.id.btnRechazar);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        DetalleActivity_.this.btnRechazar();
                    }

                }
                );
            }
        }
        ((ProgressDialogManager_) dialog).afterSetContentView_();
        {
            final TextView view = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.detalle_title));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        DetalleActivity_.this.afterTextChangedOnSomeTextViews(view, s);
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.entidad));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        DetalleActivity_.this.afterTextChangedOnSomeTextViews(view, s);
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.costo));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        DetalleActivity_.this.afterTextChangedOnSomeTextViews(view, s);
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) findViewById(co.gov.presidencia.yocuidolopublico.R.id.contratista));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        DetalleActivity_.this.afterTextChangedOnSomeTextViews(view, s);
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        init();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static DetalleActivity_.IntentBuilder_ intent(Context context) {
        return new DetalleActivity_.IntentBuilder_(context);
    }

    @Override
    public void mostrarResultado() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.mostrarResultado();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showConnectionError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.showConnectionError();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarResultado(final VotoRegistradoDTO votoRegistrado, final Long id) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.mostrarResultado(votoRegistrado, id);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void colocarMotivo(final String motivo) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.colocarMotivo(motivo);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showServerError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.showServerError();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarResultado(final ImagenDTO imagenDTO) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.mostrarResultado(imagenDTO);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadLista_motivos(final ElementoListaDTO[] motivosLista) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.loadLista_motivos(motivosLista);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarResultado(final DetalleCuidoLoPublicoDTO reporte) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.mostrarResultado(reporte);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadLista_rangos(final ElementoListaDTO[] rangosLista) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.loadLista_rangos(rangosLista);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadLista_rangos(final ElementoListaDTO[] rangosLista, final Long idRango, final Long idMotivo) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.loadLista_rangos(rangosLista, idRango, idMotivo);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerMotivo() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.obtenerMotivo();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void asociarImagen(final AsociarImagenDTO imagen) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.asociarImagen(imagen);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void registrarVoto(final Long id) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.registrarVoto(id);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarImagenGrande(final Long idImagenGrande) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.mostrarImagenGrande(idImagenGrande);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerRangos() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.obtenerRangos();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerRangos(final Long idRango, final Long idMotivo) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.obtenerRangos(idRango, idMotivo);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerReporte(final Long id) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.obtenerReporte(id);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void actualizar(final ActualizarReporteDTO reporte) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.actualizar(reporte);
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerMotivos() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    DetalleActivity_.super.obtenerMotivos();
                } catch (RuntimeException e) {
                    Log.e("DetalleActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, DetalleActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public DetalleActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
