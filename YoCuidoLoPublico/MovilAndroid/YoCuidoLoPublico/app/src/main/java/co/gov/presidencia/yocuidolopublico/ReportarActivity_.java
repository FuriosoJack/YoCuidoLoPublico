//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package co.gov.presidencia.yocuidolopublico;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;

import co.gov.presidencia.yocuidolopublico.R.id;
import co.gov.presidencia.yocuidolopublico.R.layout;
import com.googlecode.androidannotations.api.BackgroundExecutor;

import java.util.ArrayList;
import java.util.List;

import co.gov.mintic.util.ProgressDialogManager_;
import co.gov.mintic.util.dto.TextValueDTO;
import co.gov.presidencia.yocuidolopublico.service.client.CuidoLoPublicoClient_;
import co.gov.presidencia.yocuidolopublico.service.client.ServinformacionClient_;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoReportadoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ElementoListaDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ReportarCuidoLoPublicoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ServinformacionDTO;

public final class ReportarActivity_
    extends co.gov.presidencia.yocuidolopublico.ReportarActivity
{

    private List<TextValueDTO> razones = new ArrayList<TextValueDTO>(), rangos = new ArrayList<TextValueDTO>();
    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_reportar);
    }

    private void init_(Bundle savedInstanceState) {
        serviClient = new ServinformacionClient_();
        reportesClient = new CuidoLoPublicoClient_();
        dialog = ProgressDialogManager_.getInstance_(this);



    }

    private void afterSetContentView_() {
        spinnerTiempo = ((Spinner) findViewById(id.spinnerTiempo));
        spinnerRazon = ((Spinner) findViewById(id.spinnerPorQue));
        costo = ((EditText) findViewById(id.costo));
        titulo = ((EditText) findViewById(id.titulo));
        deptoMunicipio = ((TextView) findViewById(id.deptoMunicipio));
        contratista = ((EditText) findViewById(id.contratista));
        posibleEntidad = ((EditText) findViewById(id.posible_entidad));
        {
            View view = findViewById(id.btnReportar);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ReportarActivity_.this.btnReportar();
                    }

                }
                );
            }
        }
        ((ProgressDialogManager_) dialog).afterSetContentView_();
        init();
        /*
        TextValueDTO defaultElement = new TextValueDTO();
        defaultElement.setId(0l);
        defaultElement.setNombre(getString(R.string.campo_por_que));
        razones.add(defaultElement);

        razones.add(new TextValueDTO(1l, "Hola"));

        ArrayAdapter<TextValueDTO> dataAdapter = new ArrayAdapter<TextValueDTO> (this, R.layout.simple_spinner_item, razones);

        spinnerRazon.setAdapter(dataAdapter);

        TextValueDTO defaultElement2 = new TextValueDTO();
        defaultElement2.setId(0l);
        defaultElement2.setNombre(getString(R.string.campo_por_que));
        razones.add(defaultElement2);

        razones.add(new TextValueDTO(1l, "asdf"));

        ArrayAdapter<TextValueDTO> dataAdapter2 = new ArrayAdapter<TextValueDTO> (this, R.layout.simple_spinner_item, razones);

        spinnerTiempo.setAdapter(dataAdapter2);
        */
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static ReportarActivity_.IntentBuilder_ intent(Context context) {
        return new ReportarActivity_.IntentBuilder_(context);
    }

    @Override
    public void mostrarResultado(final CuidoLoPublicoReportadoDTO resultado) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.mostrarResultado(resultado);
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadLista_motivos(final ElementoListaDTO[] motivosLista) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.loadLista_motivos(motivosLista);
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showConnectionError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.showConnectionError();
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarResultado(final ServinformacionDTO response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.mostrarResultado(response);
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadLista_rangos(final ElementoListaDTO[] rangosLista) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.loadLista_rangos(rangosLista);
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showServerError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.showServerError();
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void reportar(final ReportarCuidoLoPublicoDTO reporte) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.reportar(reporte);
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerRangos() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.obtenerRangos();
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerPosicion() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.obtenerPosicion();
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerMotivos() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ReportarActivity_.super.obtenerMotivos();
                } catch (RuntimeException e) {
                    Log.e("ReportarActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, ReportarActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public ReportarActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
