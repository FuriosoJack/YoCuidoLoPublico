//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package co.gov.presidencia.yocuidolopublico.service.client;

import android.util.Log;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;
import org.springframework.web.client.RestTemplate;

import java.util.HashMap;

import co.gov.presidencia.yocuidolopublico.service.client.dto.ActualizarReporteDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.AsociarImagenDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoReportadoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.DetalleBasicoCuidoLoPublicoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.DetalleCuidoLoPublicoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoMapaDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoMapaMunicipioDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoTop5;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoPorRegionDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ElementoListaDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ImagenDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.MunicipioMapaDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.ReportarCuidoLoPublicoDTO;
import co.gov.presidencia.yocuidolopublico.service.client.dto.VotoRegistradoDTO;

public class CuidoLoPublicoClient_
    implements CuidoLoPublicoClient
{

    private RestTemplate restTemplate;
    private String rootUrl;

    public CuidoLoPublicoClient_() {
        restTemplate = new RestTemplate();
        restTemplate.getMessageConverters().add(new MappingJacksonHttpMessageConverter());
        rootUrl = "http://104.197.123.208:80/cuidolopublico/Servicios";
    }

    @Override
    public RestTemplate getRestTemplate() {
        return restTemplate;
    }

    @Override
    public ElementoListaDTO[] consultarMotivos() {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/MotivosCuidoLoPublico"), HttpMethod.GET, requestEntity, ElementoListaDTO[].class).getBody();
    }

    @Override
    public MunicipioMapaDTO[] obtenerMunicipiosPorDepartamento(String idMunicipio) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("idMunicipio", idMunicipio);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/MunicipiosPorDepartamento/{idMunicipio}"), HttpMethod.GET, requestEntity, MunicipioMapaDTO[].class, urlVariables).getBody();
    }

    @Override
    public CuidoLoPublicoMapaMunicipioDTO[] obtenerPorMunicipio(String idMunicipio) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("idMunicipio", idMunicipio);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/CuidoLoPublicoPorMunicipio/{idMunicipio}"), HttpMethod.GET, requestEntity, CuidoLoPublicoMapaMunicipioDTO[].class, urlVariables).getBody();
    }

    @Override
    public String[] obtenerDepartamentosPorRegion(String idRegion) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("idRegion", idRegion);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/DepartamentosPorRegion/{idRegion}"), HttpMethod.GET, requestEntity, String[].class, urlVariables).getBody();
    }

    @Override
    public ImagenDTO obtenerImagen(Long id) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("id", id);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/ImagenCuidoLoPublico/{id}"), HttpMethod.GET, requestEntity, ImagenDTO.class, urlVariables).getBody();
    }

    @Override
    public CuidoLoPublicoMapaDTO[] obtenerPorPosicion(Double lat, Double lng) {//test
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("lat", lat);
        urlVariables.put("lng", lng);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/CuidoLoPublicoPorPosicion?latitud={lat}&longitud={lng}"), HttpMethod.GET, requestEntity, CuidoLoPublicoMapaDTO[].class, urlVariables).getBody();
    }

    @Override
    public CuidoLoPublicoTop5[] obtenerMasVotados() {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/CuidoLoPublicoMasVotados"), HttpMethod.GET, requestEntity, CuidoLoPublicoTop5[].class).getBody();
    }

    @Override
    public DetalleCuidoLoPublicoDTO obtenerDetalle(Long id) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("id", id);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/DetalleCuidoLoPublico/{id}"), HttpMethod.GET, requestEntity, DetalleCuidoLoPublicoDTO.class, urlVariables).getBody();
    }

    @Override
    public CuidoLoPublicoPorRegionDTO[] obtenerCuidoLoPublicoPorRegion() {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/CuidoLoPublicoPorRegion"), HttpMethod.GET, requestEntity, CuidoLoPublicoPorRegionDTO[].class).getBody();
    }

    @Override
    public DetalleBasicoCuidoLoPublicoDTO obtenerMiReporte(Long id) {//test
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("id", id);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/DetalleBasicoCuidoLoPublico/{id}"), HttpMethod.GET, requestEntity, DetalleBasicoCuidoLoPublicoDTO.class, urlVariables).getBody();
    }

    @Override
    public VotoRegistradoDTO registrarVoto(Long idReporte) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("idReporte", idReporte);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Actualizar/RegistrarVoto/{idReporte}"), HttpMethod.GET, requestEntity, VotoRegistradoDTO.class, urlVariables).getBody();
    }

    @Override
    public ElementoListaDTO[] consultarRangos() {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/Consultar/RangosDeTiempo"), HttpMethod.GET, requestEntity, ElementoListaDTO[].class).getBody();
    }

    @Override
    public CuidoLoPublicoReportadoDTO reportar(ReportarCuidoLoPublicoDTO reporte) {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<ReportarCuidoLoPublicoDTO> requestEntity = new HttpEntity<ReportarCuidoLoPublicoDTO>(reporte, httpHeaders);
        Log.i("YoCuidoLoPublicoClient",restTemplate.exchange(rootUrl.concat("/YoCuidoLoPublico/Reportar"), HttpMethod.POST, requestEntity, CuidoLoPublicoReportadoDTO.class).getBody().toString());
        return restTemplate.exchange(rootUrl.concat("/YoCuidoLoPublico/Reportar"), HttpMethod.POST, requestEntity, CuidoLoPublicoReportadoDTO.class).getBody();
    }

    @Override
    public void asociarImagen(AsociarImagenDTO imagen) {
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<AsociarImagenDTO> requestEntity = new HttpEntity<AsociarImagenDTO>(imagen, httpHeaders);
        restTemplate.exchange(rootUrl.concat("/Actualizar/AsociarImagen/"), HttpMethod.POST, requestEntity, null);
    }

    @Override
    public void actualizarReporte(Long idReporte, ActualizarReporteDTO actualizacion) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("idReporte", idReporte);
        HttpHeaders httpHeaders = new HttpHeaders();
        HttpEntity<ActualizarReporteDTO> requestEntity = new HttpEntity<ActualizarReporteDTO>(actualizacion, httpHeaders);
        restTemplate.exchange(rootUrl.concat("/Actualizar/ModificarReporte/{idReporte}"), HttpMethod.PUT, requestEntity, null, urlVariables);
    }

}
