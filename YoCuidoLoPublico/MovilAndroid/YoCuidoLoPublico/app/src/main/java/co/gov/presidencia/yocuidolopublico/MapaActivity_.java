//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package co.gov.presidencia.yocuidolopublico;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import co.gov.presidencia.yocuidolopublico.service.client.CuidoLoPublicoClient_;
import co.gov.presidencia.yocuidolopublico.service.client.dto.CuidoLoPublicoMapaDTO;
import co.gov.presidencia.yocuidolopublico.R.id;
import co.gov.presidencia.yocuidolopublico.R.layout;
import com.google.android.gms.maps.model.LatLng;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import com.googlecode.androidannotations.api.SdkVersionHelper;

public final class MapaActivity_
    extends MapaActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_mapa);
    }

    private void init_(Bundle savedInstanceState) {
        reportesClient = new CuidoLoPublicoClient_();
    }

    private void afterSetContentView_() {
        {
            View view = findViewById(id.ubicarme);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MapaActivity_.this.ubicarme();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.reportar);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MapaActivity_.this.reportar();
                    }

                }
                );
            }
        }
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static MapaActivity_.IntentBuilder_ intent(Context context) {
        return new MapaActivity_.IntentBuilder_(context);
    }

    @Override
    public void centerMap(final boolean animate, final LatLng position) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MapaActivity_.super.centerMap(animate, position);
                } catch (RuntimeException e) {
                    Log.e("MapaActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showConnectionError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MapaActivity_.super.showConnectionError();
                } catch (RuntimeException e) {
                    Log.e("MapaActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void showServerError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MapaActivity_.super.showServerError();
                } catch (RuntimeException e) {
                    Log.e("MapaActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void mostrarResultado(final CuidoLoPublicoMapaDTO[] reportes) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MapaActivity_.super.mostrarResultado(reportes);
                } catch (RuntimeException e) {
                    Log.e("MapaActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void obtenerReportes(final LatLng posicion) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    MapaActivity_.super.obtenerReportes(posicion);
                } catch (RuntimeException e) {
                    Log.e("MapaActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, MapaActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public MapaActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
